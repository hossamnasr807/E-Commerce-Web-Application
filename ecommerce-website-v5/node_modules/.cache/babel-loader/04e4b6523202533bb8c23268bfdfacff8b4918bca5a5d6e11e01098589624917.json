{"ast":null,"code":"var _jsxFileName = \"C:\\\\University\\\\SWProject\\\\ecommerce-website-v5\\\\ecommerce-website-v5\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\n\n// Create the context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\n\n// Hook for consuming the context\nexport const useCart = () => {\n  _s();\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n};\n\n// Provider to manage cart state\n_s(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const CartProvider = ({\n  children\n}) => {\n  _s2();\n  const [cart, setCart] = useState([]);\n  const [popup, setPopup] = useState({\n    message: '',\n    type: ''\n  }); // popup state\n\n  // Add product to cart\n  const addToCart = product => {\n    setCart(prevCart => [...prevCart, product]);\n\n    // Show \"Added to Cart\" message\n    setPopup({\n      message: 'Added to Cart Successfully',\n      type: 'success'\n    });\n\n    // Hide the popup after 3 seconds\n    setTimeout(() => setPopup({\n      message: '',\n      type: ''\n    }), 3000);\n  };\n\n  // Remove product from cart\n  const removeFromCart = productId => {\n    setCart(prevCart => prevCart.filter(item => item.id !== productId));\n\n    // Show \"Removed from Cart\" message\n    setPopup({\n      message: 'Removed from Cart',\n      type: 'error'\n    });\n\n    // Hide the popup after 3 seconds\n    setTimeout(() => setPopup({\n      message: '',\n      type: ''\n    }), 3000);\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      addToCart,\n      removeFromCart,\n      popup\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s2(CartProvider, \"VqQiz72AkGhwqL1ZERnax796kYs=\");\n_c = CartProvider;\nexport default CartContext;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","CartContext","useCart","_s","context","Error","CartProvider","children","_s2","cart","setCart","popup","setPopup","message","type","addToCart","product","prevCart","setTimeout","removeFromCart","productId","filter","item","id","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/University/SWProject/ecommerce-website-v5/ecommerce-website-v5/src/context/CartContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\n\r\n// Create the context\r\nconst CartContext = createContext();\r\n\r\n// Hook for consuming the context\r\nexport const useCart = () => {\r\n  const context = useContext(CartContext);\r\n  if (!context) {\r\n    throw new Error('useCart must be used within a CartProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\n// Provider to manage cart state\r\nexport const CartProvider = ({ children }) => {\r\n  const [cart, setCart] = useState([]);\r\n  const [popup, setPopup] = useState({ message: '', type: '' }); // popup state\r\n\r\n  // Add product to cart\r\n  const addToCart = (product) => {\r\n    setCart((prevCart) => [...prevCart, product]);\r\n\r\n    // Show \"Added to Cart\" message\r\n    setPopup({ message: 'Added to Cart Successfully', type: 'success' });\r\n\r\n    // Hide the popup after 3 seconds\r\n    setTimeout(() => setPopup({ message: '', type: '' }), 3000);\r\n  };\r\n\r\n  // Remove product from cart\r\n  const removeFromCart = (productId) => {\r\n    setCart((prevCart) => prevCart.filter((item) => item.id !== productId));\r\n\r\n    // Show \"Removed from Cart\" message\r\n    setPopup({ message: 'Removed from Cart', type: 'error' });\r\n\r\n    // Hide the popup after 3 seconds\r\n    setTimeout(() => setPopup({ message: '', type: '' }), 3000);\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={{ cart, addToCart, removeFromCart, popup }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartContext;\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;;AAEnC;AACA,OAAO,MAAMM,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGP,UAAU,CAACI,WAAW,CAAC;EACvC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,4CAA4C,CAAC;EAC/D;EACA,OAAOD,OAAO;AAChB,CAAC;;AAED;AAAAD,EAAA,CARaD,OAAO;AASpB,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC;IAAEe,OAAO,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC,CAAC,CAAC,CAAC;;EAE/D;EACA,MAAMC,SAAS,GAAIC,OAAO,IAAK;IAC7BN,OAAO,CAAEO,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAED,OAAO,CAAC,CAAC;;IAE7C;IACAJ,QAAQ,CAAC;MAAEC,OAAO,EAAE,4BAA4B;MAAEC,IAAI,EAAE;IAAU,CAAC,CAAC;;IAEpE;IACAI,UAAU,CAAC,MAAMN,QAAQ,CAAC;MAAEC,OAAO,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAG,CAAC,CAAC,EAAE,IAAI,CAAC;EAC7D,CAAC;;EAED;EACA,MAAMK,cAAc,GAAIC,SAAS,IAAK;IACpCV,OAAO,CAAEO,QAAQ,IAAKA,QAAQ,CAACI,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKH,SAAS,CAAC,CAAC;;IAEvE;IACAR,QAAQ,CAAC;MAAEC,OAAO,EAAE,mBAAmB;MAAEC,IAAI,EAAE;IAAQ,CAAC,CAAC;;IAEzD;IACAI,UAAU,CAAC,MAAMN,QAAQ,CAAC;MAAEC,OAAO,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAG,CAAC,CAAC,EAAE,IAAI,CAAC;EAC7D,CAAC;EAED,oBACEd,OAAA,CAACC,WAAW,CAACuB,QAAQ;IAACC,KAAK,EAAE;MAAEhB,IAAI;MAAEM,SAAS;MAAEI,cAAc;MAAER;IAAM,CAAE;IAAAJ,QAAA,EACrEA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACrB,GAAA,CA/BWF,YAAY;AAAAwB,EAAA,GAAZxB,YAAY;AAiCzB,eAAeL,WAAW;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}